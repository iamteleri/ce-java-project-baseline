{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/user.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction ListUserComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 3);\n    i0.ɵɵelement(13, \"i\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 5);\n    i0.ɵɵelement(16, \"i\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"td\")(18, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ListUserComponent_tr_12_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.delete(user_r1.id));\n    });\n    i0.ɵɵelement(19, \"i\", 8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.login.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.name.first);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.name.last);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/detail/\", user_r1.id, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/edit/\", user_r1.id, \"\");\n  }\n}\nexport class ListUserComponent {\n  constructor(service, toastr, router) {\n    this.service = service;\n    this.toastr = toastr;\n    this.router = router;\n    this.users = [];\n  }\n  ngOnInit() {\n    this.listUsers();\n  }\n  listUsers() {\n    this.service.lista().subscribe(data => {\n      this.users = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n  delete(id) {\n    this.service.delete(id).subscribe(data => {\n      this.toastr.success('Usuario eliminado correctamente', '', {\n        timeOut: 3000,\n        positionClass: 'toast-top-center'\n      });\n      this.router.navigate(['/']);\n      this.listUsers();\n    }, err => {\n      console.log('Error: ' + err);\n    });\n  }\n}\nListUserComponent.ɵfac = function ListUserComponent_Factory(t) {\n  return new (t || ListUserComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.Router));\n};\nListUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListUserComponent,\n  selectors: [[\"app-list-user\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-outline-success\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-circle-info\"], [1, \"btn\", \"btn-outline-warning\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-pen-to-square\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [1, \"fa-solid\", \"fa-trash\"]],\n  template: function ListUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\", 1);\n      i0.ɵɵtext(4, \"Usuario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\", 1);\n      i0.ɵɵtext(6, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 1);\n      i0.ɵɵtext(8, \"Apellido\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 1);\n      i0.ɵɵtext(10, \"Mail\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"tbody\");\n      i0.ɵɵtemplate(12, ListUserComponent_tr_12_Template, 20, 7, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.users);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAUMA,0BAA+B;IACzBA,YAAuB;IAAAA,iBAAK;IAChCA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,aAAc;IAAAA,iBAAK;IACvBA,2BAAI;IAAyEA,wBAAuC;IAAAA,iBAAS;IAC7HA,2BAAI;IAAwEA,wBAAyC;IAAAA,iBAAS;IAC9HA,2BAAI;IAAuCA;MAAA;MAAA;MAAA;MAAA,OAASA,wCAAe;IAAA,EAAC;IAAEA,wBAAiC;IAAAA,iBAAS;;;;IAP5GA,eAAuB;IAAvBA,4CAAuB;IACvBA,eAAmB;IAAnBA,wCAAmB;IACnBA,eAAkB;IAAlBA,uCAAkB;IAClBA,eAAc;IAAdA,mCAAc;IACdA,eAAc;IAAdA,mCAAc;IAC0BA,eAAgC;IAAhCA,mEAAgC;IAChCA,eAA8B;IAA9BA,iEAA8B;;;ACNlF,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,OAAoB,EAC9BC,MAAqB,EACrBC,MAAc;IAFJ,YAAO,GAAPF,OAAO;IACjB,WAAM,GAANC,MAAM;IACN,WAAM,GAANC,MAAM;IAHhB,UAAK,GAAW,EAAE;EAGS;EAE3BC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAAS;IACP,IAAI,CAACJ,OAAO,CAACK,KAAK,EAAE,CAACC,SAAS,CAC5BC,IAAI,IAAG;MACL,IAAI,CAACC,KAAK,GAAGD,IAAI;IACnB,CAAC,EAAEE,GAAG,IAAG;MACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CACF;EACH;EAEAG,MAAM,CAACC,EAAU;IACf,IAAI,CAACb,OAAO,CAACY,MAAM,CAACC,EAAE,CAAC,CAACP,SAAS,CAC/BC,IAAI,IAAG;MACL,IAAI,CAACN,MAAM,CAACa,OAAO,CAAC,iCAAiC,EAAE,EAAE,EAAE;QACzDC,OAAO,EAAE,IAAI;QAAEC,aAAa,EAAE;OAC/B,CAAC;MACF,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3B,IAAI,CAACb,SAAS,EAAE;IAClB,CAAC,EAAEK,GAAG,IAAG;MACPC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGF,GAAG,CAAC;IAC9B,CAAC,CACF;EACH;;AAjCWX,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX9BzB,gCAAqB;MAGGA,uBAAO;MAAAA,iBAAK;MAC5BA,6BAAgB;MAAAA,sBAAM;MAAAA,iBAAK;MAC3BA,6BAAgB;MAAAA,wBAAQ;MAAAA,iBAAK;MAC7BA,6BAAgB;MAAAA,qBAAI;MAAAA,iBAAK;MAG7BA,8BAAO;MACLA,mEASK;MAEPA,iBAAQ;;;MAXeA,gBAAQ;MAARA,mCAAQ","names":["i0","ListUserComponent","constructor","service","toastr","router","ngOnInit","listUsers","lista","subscribe","data","users","err","console","log","delete","id","success","timeOut","positionClass","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/arobles/CE/userfront/src/app/users/list-user/list-user.component.html","/home/arobles/CE/userfront/src/app/users/list-user/list-user.component.ts"],"sourcesContent":["<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Usuario</th>\n        <th scope=\"col\">Nombre</th>\n        <th scope=\"col\">Apellido</th>\n        <th scope=\"col\">Mail</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of users\">\n        <th>{{user.login.username}}</th>\n        <td>{{user.name.first}}</td>\n        <td>{{user.name.last}}</td>\n        <td>{{user.email}}</td>\n        <td>{{user.email}}</td>\n        <td><button class=\"btn btn-outline-success\" routerLink=\"/detail/{{user.id}}\"><i class=\"fa-solid fa-circle-info\"></i></button></td>\n        <td><button class=\"btn btn-outline-warning\" routerLink=\"/edit/{{user.id}}\"> <i class=\"fa-solid fa-pen-to-square\"></i></button></td>\n        <td><button class=\"btn btn-outline-danger\" (click)=\"delete(user.id)\"> <i class=\"fa-solid fa-trash\"></i></button></td>\n      </tr>\n     \n    </tbody>\n  </table>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-list-user',\n  templateUrl: './list-user.component.html',\n  styleUrls: ['./list-user.component.css']\n})\nexport class ListUserComponent implements OnInit {\n\n  users: User[] = [];\n  constructor(private service: UserService,\n    private toastr: ToastrService,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.listUsers();\n  }\n\n  listUsers(): void {\n    this.service.lista().subscribe(\n      data => {\n        this.users = data;\n      }, err => {\n        console.log(err);\n      }\n    );\n  }\n\n  delete(id: string): void {\n    this.service.delete(id).subscribe(\n      data => {\n        this.toastr.success('Usuario eliminado correctamente', '', {\n          timeOut: 3000, positionClass: 'toast-top-center'\n        });\n        this.router.navigate(['/']);\n        this.listUsers();\n      }, err => {\n        console.log('Error: ' + err)\n      }\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}